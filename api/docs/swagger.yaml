definitions:
  book.Book:
    properties:
      ID:
        type: string
      author:
        type: string
      category:
        type: string
      count:
        type: integer
      description:
        type: string
      name:
        type: string
      pages:
        type: integer
      year:
        type: string
    type: object
  book.GetAllBooksResponse:
    properties:
      bookList:
        items:
          $ref: '#/definitions/book.Book'
        type: array
    type: object
  category.Category:
    properties:
      ID:
        type: string
      name:
        type: string
    type: object
  category.GetAllCategoriesResponse:
    properties:
      categoryList:
        items:
          $ref: '#/definitions/category.Category'
        type: array
    type: object
  models.Book:
    properties:
      author:
        type: string
      category:
        type: string
      description:
        type: string
      guid:
        type: string
      name:
        type: string
      pages:
        type: integer
      year:
        type: string
    type: object
  models.BookCreate:
    properties:
      author:
        type: string
      category:
        type: string
      description:
        type: string
      name:
        type: string
      pages:
        type: integer
      year:
        type: string
    type: object
  models.BookList:
    properties:
      books:
        items:
          $ref: '#/definitions/models.Book'
        type: array
      count:
        type: integer
    type: object
  models.Category:
    properties:
      category_name:
        type: string
      guid:
        type: string
    type: object
  models.CategoryCreate:
    properties:
      category_name:
        type: string
    type: object
  models.ResponseModel:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/book:
    get:
      consumes:
      - application/json
      description: Get All Books
      operationId: get-all-books
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: page
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.BookList'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get all books
      tags:
      - book
    post:
      consumes:
      - application/json
      description: Create Book
      operationId: create-book
      parameters:
      - description: book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.BookCreate'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create book
      tags:
      - book
    put:
      consumes:
      - application/json
      description: Update Book
      operationId: update-book
      parameters:
      - description: book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update book
      tags:
      - book
  /v1/book/{book_id}:
    delete:
      consumes:
      - application/json
      description: Delete book
      operationId: delete-book
      parameters:
      - description: Book ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete book
      tags:
      - book
    get:
      consumes:
      - application/json
      description: Get Book
      operationId: get-book
      parameters:
      - description: book_id
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book.GetAllBooksResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get book
      tags:
      - book
  /v1/category:
    get:
      consumes:
      - application/json
      description: Get All Categories
      operationId: get-all-categories
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: page
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/category.GetAllCategoriesResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get all categories
      tags:
      - category
    post:
      consumes:
      - application/json
      description: Create Category
      operationId: create-category
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryCreate'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create category
      tags:
      - category
    put:
      consumes:
      - application/json
      description: Update Category
      operationId: update-category
      parameters:
      - description: category
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update category
      tags:
      - category
  /v1/category/{category_id}:
    delete:
      consumes:
      - application/json
      description: Delete category
      operationId: delete-category
      parameters:
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete category
      tags:
      - category
    get:
      consumes:
      - application/json
      description: Get Category
      operationId: get-category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Category'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get category
      tags:
      - category
swagger: "2.0"
